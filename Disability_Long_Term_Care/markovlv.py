# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.
# This file is compatible with both classic and new-style classes.

from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_markovlv', [dirname(__file__)])
        except ImportError:
            import _markovlv
            return _markovlv
        if fp is not None:
            try:
                _mod = imp.load_module('_markovlv', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _markovlv = swig_import_helper()
    del swig_import_helper
else:
    import _markovlv
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


class MARKOVLV(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MARKOVLV, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MARKOVLV, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _markovlv.new_MARKOVLV(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _markovlv.delete_MARKOVLV
    __del__ = lambda self : None;
    def vReset(self): return _markovlv.MARKOVLV_vReset(self)
    def vSetInternals(self, *args): return _markovlv.MARKOVLV_vSetInternals(self, *args)
    def vSetStartTime(self, *args): return _markovlv.MARKOVLV_vSetStartTime(self, *args)
    def vSetStopTime(self, *args): return _markovlv.MARKOVLV_vSetStopTime(self, *args)
    def vSetNrStates(self, *args): return _markovlv.MARKOVLV_vSetNrStates(self, *args)
    def vSetGetData(self, *args): return _markovlv.MARKOVLV_vSetGetData(self, *args)
    def dSetPre(self, *args): return _markovlv.MARKOVLV_dSetPre(self, *args)
    def dSetPost(self, *args): return _markovlv.MARKOVLV_dSetPost(self, *args)
    def dSetPij(self, *args): return _markovlv.MARKOVLV_dSetPij(self, *args)
    def dSetDisc(self, *args): return _markovlv.MARKOVLV_dSetDisc(self, *args)
    def vSetInterestModel(self, *args): return _markovlv.MARKOVLV_vSetInterestModel(self, *args)
    def vSetDefaultNrMoments(self, *args): return _markovlv.MARKOVLV_vSetDefaultNrMoments(self, *args)
    def dGetDK(self, *args): return _markovlv.MARKOVLV_dGetDK(self, *args)
    def dGetCF(self, *args): return _markovlv.MARKOVLV_dGetCF(self, *args)
    def dGetRP(self, *args): return _markovlv.MARKOVLV_dGetRP(self, *args)
    def dGetSP(self, *args): return _markovlv.MARKOVLV_dGetSP(self, *args)
    def dGetRegP(self, *args): return _markovlv.MARKOVLV_dGetRegP(self, *args)
    def lSetFolgezustand(self, *args): return _markovlv.MARKOVLV_lSetFolgezustand(self, *args)
    def lGetMaxTime(self): return _markovlv.MARKOVLV_lGetMaxTime(self)
    def lGetNrStates(self): return _markovlv.MARKOVLV_lGetNrStates(self)
    def lGetStartTime(self): return _markovlv.MARKOVLV_lGetStartTime(self)
    def lGetStopTime(self): return _markovlv.MARKOVLV_lGetStopTime(self)
    __swig_setmethods__["dAddBenefits"] = _markovlv.MARKOVLV_dAddBenefits_set
    __swig_getmethods__["dAddBenefits"] = _markovlv.MARKOVLV_dAddBenefits_get
    if _newclass:dAddBenefits = _swig_property(_markovlv.MARKOVLV_dAddBenefits_get, _markovlv.MARKOVLV_dAddBenefits_set)
    def vSetInitState(self, *args): return _markovlv.MARKOVLV_vSetInitState(self, *args)
    def vGenerateTrajectory(self): return _markovlv.MARKOVLV_vGenerateTrajectory(self)
    def vGetState(self, *args): return _markovlv.MARKOVLV_vGetState(self, *args)
    def dGetRandCF(self, *args): return _markovlv.MARKOVLV_dGetRandCF(self, *args)
    def dGetRandDK(self, *args): return _markovlv.MARKOVLV_dGetRandDK(self, *args)
    def dGetMeanCF(self, *args): return _markovlv.MARKOVLV_dGetMeanCF(self, *args)
    def dGetMeanDK(self, *args): return _markovlv.MARKOVLV_dGetMeanDK(self, *args)
    def vNewSeed(self, *args): return _markovlv.MARKOVLV_vNewSeed(self, *args)
    def vResetMeanResults(self): return _markovlv.MARKOVLV_vResetMeanResults(self)
    __swig_setmethods__["lSeed"] = _markovlv.MARKOVLV_lSeed_set
    __swig_getmethods__["lSeed"] = _markovlv.MARKOVLV_lSeed_get
    if _newclass:lSeed = _swig_property(_markovlv.MARKOVLV_lSeed_get, _markovlv.MARKOVLV_lSeed_set)
    def vPrintTeX(self, *args): return _markovlv.MARKOVLV_vPrintTeX(self, *args)
MARKOVLV_swigregister = _markovlv.MARKOVLV_swigregister
MARKOVLV_swigregister(MARKOVLV)

class CAPITALLV(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CAPITALLV, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CAPITALLV, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _markovlv.new_CAPITALLV(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _markovlv.delete_CAPITALLV
    __del__ = lambda self : None;
    def vSetStartTime(self, *args): return _markovlv.CAPITALLV_vSetStartTime(self, *args)
    def vSetStopTime(self, *args): return _markovlv.CAPITALLV_vSetStopTime(self, *args)
    def vSetSurvival(self, *args): return _markovlv.CAPITALLV_vSetSurvival(self, *args)
    def vSetDeath(self, *args): return _markovlv.CAPITALLV_vSetDeath(self, *args)
    def vSetPremium(self, *args): return _markovlv.CAPITALLV_vSetPremium(self, *args)
    def vSetSurvivalGen(self, *args): return _markovlv.CAPITALLV_vSetSurvivalGen(self, *args)
    def vSetDeathGen(self, *args): return _markovlv.CAPITALLV_vSetDeathGen(self, *args)
    def vSetPremiumGen(self, *args): return _markovlv.CAPITALLV_vSetPremiumGen(self, *args)
    def dSetQx(self, *args): return _markovlv.CAPITALLV_dSetQx(self, *args)
    def dSetFx(self, *args): return _markovlv.CAPITALLV_dSetFx(self, *args)
    def dSetBaseYear(self, *args): return _markovlv.CAPITALLV_dSetBaseYear(self, *args)
    def dSetActualYear(self, *args): return _markovlv.CAPITALLV_dSetActualYear(self, *args)
    def dSetDisc(self, *args): return _markovlv.CAPITALLV_dSetDisc(self, *args)
    def dGetDK(self, *args): return _markovlv.CAPITALLV_dGetDK(self, *args)
    def dGetCF(self, *args): return _markovlv.CAPITALLV_dGetCF(self, *args)
    def dGetQx(self, *args): return _markovlv.CAPITALLV_dGetQx(self, *args)
    def dSetQx2Level(self, *args): return _markovlv.CAPITALLV_dSetQx2Level(self, *args)
    def dSetSx2(self, *args): return _markovlv.CAPITALLV_dSetSx2(self, *args)
    def dSetRDR(self, *args): return _markovlv.CAPITALLV_dSetRDR(self, *args)
    def dSetSurenderPenaltyInMR(self, *args): return _markovlv.CAPITALLV_dSetSurenderPenaltyInMR(self, *args)
    def dSetSHMarginInMR(self, *args): return _markovlv.CAPITALLV_dSetSHMarginInMR(self, *args)
    def dSetSolaCapitalInMR(self, *args): return _markovlv.CAPITALLV_dSetSolaCapitalInMR(self, *args)
    def dSetInvReturn(self, *args): return _markovlv.CAPITALLV_dSetInvReturn(self, *args)
    def dGetEV(self, *args): return _markovlv.CAPITALLV_dGetEV(self, *args)
CAPITALLV_swigregister = _markovlv.CAPITALLV_swigregister
CAPITALLV_swigregister(CAPITALLV)

class ANNUITYLV(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ANNUITYLV, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ANNUITYLV, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _markovlv.new_ANNUITYLV(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _markovlv.delete_ANNUITYLV
    __del__ = lambda self : None;
    def vSetStartTime(self, *args): return _markovlv.ANNUITYLV_vSetStartTime(self, *args)
    def vSetStopTime(self, *args): return _markovlv.ANNUITYLV_vSetStopTime(self, *args)
    def vSetSAge(self, *args): return _markovlv.ANNUITYLV_vSetSAge(self, *args)
    def vSetG(self, *args): return _markovlv.ANNUITYLV_vSetG(self, *args)
    def vSetMaxProj(self, *args): return _markovlv.ANNUITYLV_vSetMaxProj(self, *args)
    def dSetQx(self, *args): return _markovlv.ANNUITYLV_dSetQx(self, *args)
    def dSetFx(self, *args): return _markovlv.ANNUITYLV_dSetFx(self, *args)
    def dSetBaseYear(self, *args): return _markovlv.ANNUITYLV_dSetBaseYear(self, *args)
    def dSetActualYear(self, *args): return _markovlv.ANNUITYLV_dSetActualYear(self, *args)
    def dSetDisc(self, *args): return _markovlv.ANNUITYLV_dSetDisc(self, *args)
    def dGetDK(self, *args): return _markovlv.ANNUITYLV_dGetDK(self, *args)
    def dGetCF(self, *args): return _markovlv.ANNUITYLV_dGetCF(self, *args)
    def dGetQx(self, *args): return _markovlv.ANNUITYLV_dGetQx(self, *args)
    def dSetPre(self, *args): return _markovlv.ANNUITYLV_dSetPre(self, *args)
    def dSetRelativeQxForTime(self, *args): return _markovlv.ANNUITYLV_dSetRelativeQxForTime(self, *args)
    def vLeistReset(self): return _markovlv.ANNUITYLV_vLeistReset(self)
    def vSetLeistLinear(self, *args): return _markovlv.ANNUITYLV_vSetLeistLinear(self, *args)
    def vSetLeistExp(self, *args): return _markovlv.ANNUITYLV_vSetLeistExp(self, *args)
ANNUITYLV_swigregister = _markovlv.ANNUITYLV_swigregister
ANNUITYLV_swigregister(ANNUITYLV)

class WIDDOWLV(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, WIDDOWLV, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, WIDDOWLV, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _markovlv.new_WIDDOWLV(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _markovlv.delete_WIDDOWLV
    __del__ = lambda self : None;
    def vSetStartTime(self, *args): return _markovlv.WIDDOWLV_vSetStartTime(self, *args)
    def vSetStopTime(self, *args): return _markovlv.WIDDOWLV_vSetStopTime(self, *args)
    def dSetQx(self, *args): return _markovlv.WIDDOWLV_dSetQx(self, *args)
    def dSetQy(self, *args): return _markovlv.WIDDOWLV_dSetQy(self, *args)
    def dSetFx(self, *args): return _markovlv.WIDDOWLV_dSetFx(self, *args)
    def dSetFy(self, *args): return _markovlv.WIDDOWLV_dSetFy(self, *args)
    def dSetHx(self, *args): return _markovlv.WIDDOWLV_dSetHx(self, *args)
    def dSetYx(self, *args): return _markovlv.WIDDOWLV_dSetYx(self, *args)
    def dSetBaseYear(self, *args): return _markovlv.WIDDOWLV_dSetBaseYear(self, *args)
    def dSetActualYear(self, *args): return _markovlv.WIDDOWLV_dSetActualYear(self, *args)
    def dSetDisc(self, *args): return _markovlv.WIDDOWLV_dSetDisc(self, *args)
    def dGetDK(self, *args): return _markovlv.WIDDOWLV_dGetDK(self, *args)
    def dGetCF(self, *args): return _markovlv.WIDDOWLV_dGetCF(self, *args)
    def dGetQx(self, *args): return _markovlv.WIDDOWLV_dGetQx(self, *args)
    def dSetPre(self, *args): return _markovlv.WIDDOWLV_dSetPre(self, *args)
    def vLeistReset(self): return _markovlv.WIDDOWLV_vLeistReset(self)
    def vSetLeistLinear(self, *args): return _markovlv.WIDDOWLV_vSetLeistLinear(self, *args)
    def vSetLeistExp(self, *args): return _markovlv.WIDDOWLV_vSetLeistExp(self, *args)
WIDDOWLV_swigregister = _markovlv.WIDDOWLV_swigregister
WIDDOWLV_swigregister(WIDDOWLV)

class GLMOD(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, GLMOD, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, GLMOD, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _markovlv.new_GLMOD()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _markovlv.delete_GLMOD
    __del__ = lambda self : None;
    def dSetQx(self, *args): return _markovlv.GLMOD_dSetQx(self, *args)
    def dSetFx(self, *args): return _markovlv.GLMOD_dSetFx(self, *args)
    def dSetSx(self, *args): return _markovlv.GLMOD_dSetSx(self, *args)
    def dSetBaseYear(self, *args): return _markovlv.GLMOD_dSetBaseYear(self, *args)
    def dSetActualYear(self, *args): return _markovlv.GLMOD_dSetActualYear(self, *args)
    def dSetDisc(self, *args): return _markovlv.GLMOD_dSetDisc(self, *args)
    def vStress(self, *args): return _markovlv.GLMOD_vStress(self, *args)
    def vAddAnnuity(self, *args): return _markovlv.GLMOD_vAddAnnuity(self, *args)
    def vAddEndowment(self, *args): return _markovlv.GLMOD_vAddEndowment(self, *args)
    def vAddWiddow(self, *args): return _markovlv.GLMOD_vAddWiddow(self, *args)
    def vSetRKWAnnuity(self, *args): return _markovlv.GLMOD_vSetRKWAnnuity(self, *args)
    def vSetRKWEndowment(self, *args): return _markovlv.GLMOD_vSetRKWEndowment(self, *args)
    def vUpdateOperator(self): return _markovlv.GLMOD_vUpdateOperator(self)
    def dGetDK(self, *args): return _markovlv.GLMOD_dGetDK(self, *args)
    def dGetFVDK(self): return _markovlv.GLMOD_dGetFVDK(self)
    def dGetCF(self, *args): return _markovlv.GLMOD_dGetCF(self, *args)
    def dGetStatDK(self, *args): return _markovlv.GLMOD_dGetStatDK(self, *args)
    def dGetQx(self, *args): return _markovlv.GLMOD_dGetQx(self, *args)
    def dSetRelativeQxForTime(self, *args): return _markovlv.GLMOD_dSetRelativeQxForTime(self, *args)
GLMOD_swigregister = _markovlv.GLMOD_swigregister
GLMOD_swigregister(GLMOD)

class ANNMOD(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ANNMOD, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ANNMOD, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _markovlv.new_ANNMOD()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _markovlv.delete_ANNMOD
    __del__ = lambda self : None;
    def dSetQx(self, *args): return _markovlv.ANNMOD_dSetQx(self, *args)
    def dSetFx(self, *args): return _markovlv.ANNMOD_dSetFx(self, *args)
    def dSetSx(self, *args): return _markovlv.ANNMOD_dSetSx(self, *args)
    def dSetBaseYear(self, *args): return _markovlv.ANNMOD_dSetBaseYear(self, *args)
    def dSetActualYear(self, *args): return _markovlv.ANNMOD_dSetActualYear(self, *args)
    def dSetDisc(self, *args): return _markovlv.ANNMOD_dSetDisc(self, *args)
    def vAddAnnuity1(self, *args): return _markovlv.ANNMOD_vAddAnnuity1(self, *args)
    def vAddAnnuity0(self, *args): return _markovlv.ANNMOD_vAddAnnuity0(self, *args)
    def vAddAnnuity2xy(self, *args): return _markovlv.ANNMOD_vAddAnnuity2xy(self, *args)
    def vAddAnnuity2xyBar(self, *args): return _markovlv.ANNMOD_vAddAnnuity2xyBar(self, *args)
    def vAddAnnuity2xToy(self, *args): return _markovlv.ANNMOD_vAddAnnuity2xToy(self, *args)
    def vAddAnnuity2yTox(self, *args): return _markovlv.ANNMOD_vAddAnnuity2yTox(self, *args)
    def vUpdateOperator(self): return _markovlv.ANNMOD_vUpdateOperator(self)
    def dGetDK(self, *args): return _markovlv.ANNMOD_dGetDK(self, *args)
    def dGetFVDK(self): return _markovlv.ANNMOD_dGetFVDK(self)
    def dGetCF(self, *args): return _markovlv.ANNMOD_dGetCF(self, *args)
    def dGetStatDK(self, *args): return _markovlv.ANNMOD_dGetStatDK(self, *args)
    def dGetQx(self, *args): return _markovlv.ANNMOD_dGetQx(self, *args)
    def dSetRelativeQxForTime(self, *args): return _markovlv.ANNMOD_dSetRelativeQxForTime(self, *args)
ANNMOD_swigregister = _markovlv.ANNMOD_swigregister
ANNMOD_swigregister(ANNMOD)



